<<<<<<< HEAD
# Generated by Django 4.1 on 2022-11-07 18:36
=======
# Generated by Django 4.1 on 2022-10-19 23:29
>>>>>>> 98bc6dc (s)

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='MyUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Books',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('book_name', models.CharField(max_length=63)),
            ],
        ),
        migrations.CreateModel(
            name='Quarter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
                ('start', models.DateField()),
                ('end', models.DateField()),
            ],
        ),
        migrations.CreateModel(
            name='SchoolClass',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number_class', models.IntegerField(null=True)),
                ('name_class', models.CharField(max_length=15)),
                ('slug', models.SlugField(max_length=15)),
            ],
            options={
                'ordering': ['number_class', 'name_class'],
            },
        ),
        migrations.CreateModel(
<<<<<<< HEAD
=======
            name='SchoolTimetable',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
>>>>>>> 98bc6dc (s)
            name='TeacherRegistration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('age', models.IntegerField(null=True, validators=[django.core.validators.MaxValueValidator(limit_value=75, message='Максимум 75'), django.core.validators.MinValueValidator(limit_value=4, message='Минимум 4')], verbose_name='Возраст')),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='diary.books', verbose_name='Выбор Предмета')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='StudentRegistration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('age', models.IntegerField(null=True, validators=[django.core.validators.MaxValueValidator(limit_value=75, message='Максимум 75'), django.core.validators.MinValueValidator(limit_value=4, message='Минимум 4')], verbose_name='Возраст')),
                ('learned_class', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='diary.schoolclass', verbose_name='Выбор класса')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
<<<<<<< HEAD
            name='SchoolTimetable',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lesson_date', models.CharField(choices=[(0, 'Понедельник'), (1, 'Вторник'), (2, 'Среда'), (3, 'Четверг'), (4, 'Пятница'), (5, 'Субота'), (6, 'Воскресенье')], max_length=30)),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='diary.books')),
            ],
        ),
        migrations.CreateModel(
=======
>>>>>>> 98bc6dc (s)
            name='HomeWorkModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('home_work', models.CharField(max_length=400, verbose_name='Домашнее задание')),
                ('date_end_of_homework', models.DateField(null=True, verbose_name='До какого числа домашнее задание актуально')),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='diary.books', verbose_name='Предмет')),
                ('student_class', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='diary.schoolclass', verbose_name='Класс')),
            ],
        ),
        migrations.CreateModel(
            name='Evaluation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('evaluation', models.IntegerField(choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5)])),
                ('date', models.DateField(auto_now=True)),
<<<<<<< HEAD
=======
                ('is_published', models.BooleanField()),
>>>>>>> 98bc6dc (s)
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='diary.books')),
                ('quarter', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='diary.quarter')),
                ('student', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='BookWithClass',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
<<<<<<< HEAD
                ('book', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='diary.schooltimetable')),
=======
                ('book', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='diary.books')),
>>>>>>> 98bc6dc (s)
                ('student_class', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='diary.schoolclass')),
            ],
        ),
        migrations.AddField(
            model_name='myuser',
            name='student',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='diary.studentregistration'),
        ),
        migrations.AddField(
            model_name='myuser',
            name='teacher',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='diary.teacherregistration'),
        ),
        migrations.AddField(
            model_name='myuser',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions'),
        ),
    ]
